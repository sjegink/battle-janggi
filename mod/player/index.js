'use strict';

/**
 * Player
 * @since 2022-12-06
 * @author sjeg<sjegink@gmail.com>
 * 
 * Manage player.
 */
const Player = module.exports = class Player {
	id;
	constructor(playerId){
		this.id = playerId;
		this._loggedAt = new Date().getTime();
		this.touch();
	}
	touch(){
		this._touchedAt = new Date().getTime();
	}
};

// define static members
Object.freeze(function(){

	const Repo = require('./repository')(this);

	/**
	 * @name createPlayer
	 * @param {string} playerId is equal to socketId generated by socket.io
	 */
	this.createPlayer = function(){
		const player = Repo.create();
		if(playerId != null){
			player.id = playerId;
			Repo.save(player);
		}
		return playerId;
	}

	/**
	 * @name getPlayer
	 * @param {string} playerId
	 */
	this.getPlayer = function(playerId){
		const player = Repo.findById(playerId);
		if(player instanceof Player){
			player.touch();
		}
		return player;
	}

	// load socket listenerPack
	[
		'socket'
	].forEach(subdirName=>{
		this[subdirName] = {};
		fs.readdir(__dirname+"/"+subdirName).then(async entryNames=>{
			entryNames.forEach(name=>{
				name = name.replace(/\W.*/,"");
				this[subdirName][name] = require(__dirname+"/"+subdirName+"/"+name);
			});
		});
	});
}.call(Player));